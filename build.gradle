plugins {
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = '1.2.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.15.2'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.15.2'
    implementation 'software.amazon.awssdk:s3:2.25.0'
    implementation 'org.slf4j:slf4j-simple:2.0.13'
    implementation 'org.json:json:20231013'

    implementation "org.openjfx:javafx-controls:17.0.2"
    implementation "org.openjfx:javafx-fxml:17.0.2"
}

javafx {
    version = "17.0.2"
    modules = [ 'javafx.controls', 'javafx.fxml' ]
}

application {
    mainClass = 'com.nicholasburczyk.packupdater.Main'
}

shadowJar {
    archiveBaseName = 'packupdater'
    archiveClassifier = ''
    archiveVersion = version
    mergeServiceFiles()
    manifest {
        attributes 'Main-Class': application.mainClass
    }
}

task createLaunchers {
    dependsOn shadowJar
    group = 'distribution'
    description = 'Creates launcher scripts and packages for Windows and macOS.'

    doLast {
        def jarFile = shadowJar.archiveFile.get().asFile
        def launchersDir = file("${buildDir}/launchers")
        launchersDir.mkdirs()

        // === macOS ===
        def macDir = new File(launchersDir, "GroidPack Updater-MacOS")
        macDir.mkdirs()

        copy {
            from jarFile
            into macDir
        }

        copy {
            from "javafx-mac"
            into "${macDir}/javafx"
        }

        // .command launcher
        def macCommand = new File(macDir, "(CLICK TO RUN) PackUpdater.command")
        macCommand.text = """#!/bin/bash
                    cd "\$(dirname "\$0")"
                    java --module-path javafx/lib --add-modules javafx.controls,javafx.fxml -jar ${jarFile.name}
                    """
        macCommand.setExecutable(true)

        copy {
            from("src/main/resources/com/nicholasburczyk/packupdater/images/folder.icns")
            into macDir
        }

        ant.zip(destfile: new File(launchersDir, "GroidPack Updater-MacOS.zip"), basedir: macDir)

        // === Windows ===
        def winDir = new File(launchersDir, "GroidPack Updater-Windows")
        winDir.mkdirs()

        copy {
            from jarFile
            into winDir
        }

        copy {
            from "javafx-win"
            into "${winDir}/javafx"
        }

        // .bat launcher
        def winBat = new File(winDir, "(CLICK ME) PackUpdater.bat")
        winBat.text = """@echo off
                    cd /d "%~dp0"
                    java --module-path javafx\\lib --add-modules javafx.controls,javafx.fxml -jar ${jarFile.name}
                    pause
                    """

        def iconSetupBat = new File(winDir, "icon_setup.bat")
        iconSetupBat.text = """@echo off
                    attrib +r "../GroidPack Updater-Windows"
                    attrib +h "../GroidPack Updater-Windows\\desktop.ini"
                    ie4uinit.exe -show
                    pause
                    """

        def desktopIni = new File(winDir, "desktop.ini")
        desktopIni.text = """[.ShellClassInfo]
                    IconResource=folder.ico,0
                    InfoTip=Double-click to launch PackUpdater
                    """

        copy {
            from("src/main/resources/com/nicholasburczyk/packupdater/images/folder.ico")
            into winDir
        }

        ant.zip(destfile: new File(launchersDir, "GroidPack Updater-Windows.zip"), basedir: winDir)
    }
}
